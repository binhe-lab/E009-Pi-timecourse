---
title: '2018-11-21'
output: html_document
---

```{r}
library(limma)
library(edgeR)
require(ggplot2)       ## for plotting
require(limma)         ## for differential gene expression analysis
require(data.table)    ## for fast importing and manipulating data tables
```


```{r}
1# Input raw data
rawdata <- fread("../sandbox/Ex009_reads_per_transcript_2017-10-18.txt", check.names = FALSE, stringsAsFactors = FALSE)  ## for the logical arguments, space are needed
head(rawdata, n=3L) ## view first 3 rows of data
tail(rawdata, n=5L) ## view last 5 rows of data
```

```{r}
2# coerce columns to do DEG analysis
pre <- as.data.frame.matrix(rawdata[,34:35])
treated <- as.data.frame.matrix(rawdata[,38:39])
genename <- as.data.frame.matrix(rawdata[,41])
trial <- cbind(pre,treated)
trial <- cbind(genename,trial)
write.table(trial,file = "Ex009.txt",sep="\t",row.names=FALSE, quote=FALSE) ## still don't know whether I need sep="\t" here, quote = FALSE means nothing is quoted
```

```{r}
3# normalization
rawdata <- fread("../sandbox/Ex009.txt", check.names = FALSE, stringsAsFactors = FALSE)
y<-DGEList(counts=rawdata[,2:5],genes=rawdata[,1])##small parentheses means function, [,]means lines or rows of matrix ##
y<-calcNormFactors(y) ##TMM normalization, based on the assumption that the majority of genes are not DEGs
plotMDS(y)
## calculate log transformed, normalized count
cpm.o <- cpm( y, normalized.lib.sizes = FALSE, log = FALSE) # unnormalized
cpm.n <- cpm(y,normalized.lib.sizes = TRUE,log= FALSE)#normalized
boxplot(cpm.o, outline= F)
boxplot(cpm.n, col="green",outline = F)
cpm.n <- cbind(genename,cpm.n)
write.table(cpm.n,file="TMMnorm.txt",row.names=FALSE,sep="\t",quote=F) 
```

```{r}
5## create design matrix
eset <- read.table("TMMnorm.txt", sep="\t",header = TRUE,row.names=1) ## why we need sep="\t",rownames=1 whether we have the first column for our row names, rather than included into the datafram, which could be no numeric.
mat=as.matrix(probe_exp) ##as.matrix() Convert a data.table to a matrix
condition=factor(c(rep("Pre",2),rep("Tre20min",2))) ##use c() here to combine arguments into a vector, factor() needs a vector of data
design<-model.matrix(~-1+condition) ##Do not understand ~-1+condition, the object used in model.matrix should be an appropriate class, will get a matrix after run this function 
colnames(design)<-c("Pre","Tre20min")
contrast.matrix<-makeContrasts(contrasts="Tre20min-Pre",levels=design)##construct a contrast matrix, contrasts:character vector specify contrasts, levels: character vector or factor naming the parameters of which contrasts are desired?
fit<-lmFit(eset,design)
fit1<-contrasts.fit(fit,contrast.matrix)
fit2<-eBayes(fit1)
dif<-topTable(fit2,coef="Tre20min-Pre",n=nrow(fit2),adjust="BH")
genesymbol<-rownames(dif)
dif<-cbind(genesymbol,dif)
write.table(dif,file="probeid.Foldchange.txt",sep='\t',quote=F,row.names=F)
```
